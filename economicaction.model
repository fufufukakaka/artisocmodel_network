//====================================================================/
//　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　/
// artisoc                                                            /
//                                                                    /
//====================================================================/

Version = 3.5;



//-------------------------------------------------------
// Component Tree
//-------------------------------------------------------
UNIVERSE {
    Space Map(0,0),Square_2D(50, 50, !Loop, North, 1, !Map_3D){
        AgtType Point(0, 0)[110] {
            Dim ID(0, 0) As Integer = (0);
            Dim X(0, 0) As Double = (0.0);
            Dim Y(0, 0) As Double = (0.0);
            Dim Layer(0, 0) As Integer = (0);
            Dim Direction(0, 0) As Double = (0.0);
            Dim DijkstraValue(0, 0) As Double = (0.0);
            Dim ChoiceAgt(0, 0) As Agt = (0);
            Dim NearAgtSet(0, 0) As AgtSet = ();
            Dim StreetAgt(0, 0) As Agt = (0);
            Dim site(0, 0) As Integer = (0);
            Dim color(0, 0) As Integer = (0);
        }
        AgtType Person(0, 0)[0] {
            Dim ID(0, 0) As Integer = (0);
            Dim X(0, 0) As Double = (0.0);
            Dim Y(0, 0) As Double = (0.0);
            Dim Layer(0, 0) As Integer = (0);
            Dim Direction(0, 0) As Double = (0.0);
            Dim RouteArray(0, 0) As String = ("");
            Dim RouteCount(0, 0) As Integer = (0);
            Dim Color(0, 0) As Integer = (0);
            Dim action(0, 0) As Integer = (0);
            Dim work(0, 0) As Integer = ();
        }
        AgtType Block(0, 0)[0] {
            Dim ID(0, 0) As Integer = (0);
            Dim X(0, 0) As Double = (0.0);
            Dim Y(0, 0) As Double = (0.0);
            Dim Layer(0, 0) As Integer = (0);
            Dim Direction(0, 0) As Double = (0.0);
        }
        AgtType government(0, 0)[1] {
            Dim ID(0, 0) As Integer = ();
            Dim X(0, 0) As Double = ();
            Dim Y(0, 0) As Double = ();
            Dim Layer(0, 0) As Integer = ();
            Dim Direction(0, 0) As Double = ();
        }
    }
    AgtType Link(0, 0)[282] {
        Dim ID(0, 0) As Integer = (0);
        Dim Begin_agt(0, 0) As Agt = (0);
        Dim End_Agt(0, 0) As Agt = (0);
        Dim StreetAgt(0, 0) As Agt = (0);
        Dim ReverseLinkAgt(0, 0) As Agt = (0);
    }
    AgtType Street(0, 0)[0] {
        Dim ID(0, 0) As Integer = (0);
        Dim Points(0, 0) As String = ("");
        Dim Cost(0, 0) As Double = (0.0);
        Dim ReverseStreetAgt(0, 0) As Agt = (0);
    }
    AgtType DijkstraStreet(0, 0)[0] {
        Dim ID(0, 0) As Integer = (0);
        Dim Route(0, 0) As String = ("");
        Dim Value(0, 0) As Double = (0.0);
        Dim StreetRoute(0, 0) As String = ("");
    }
    AgtType StreetBackup(0, 0)[0] {
        Dim ID(0, 0) As Integer = (0);
        Dim StreetAgt(0, 0) As Agt = (0);
        Dim Points(0, 0) As String = ("");
        Dim Cost(0, 0) As Double = (0.0);
        Dim ReverseStreetAgt(0, 0) As Agt = (0);
    }
    AgtType PointBackup(0, 0)[0] {
        Dim ID(0, 0) As Integer = (0);
        Dim PointAgt(0, 0) As Agt = (0);
        Dim StreetAgt(0, 0) As Agt = (0);
    }
    Dim TemporaryStreetAgtset(0, 0) As AgtSet = ();
    Dim shoplist(0, 0)[5] As Integer = ();
    Dim officelist(0, 0)[5] As Integer = ();
}


//-------------------------------------------------------
// Agent Variable Initial Data
//-------------------------------------------------------
Initial_Value {
    UNIVERSE.MAP.POINT.X = 110(44.99105546, 42.48658318, 43.20214669, 46.86940966, 45.16994633, 40.96601073, 43.82826476, 45.52772809, 48.21109123, 47.49552773
, 42.03935599, 46.69051878, 41.77101968, 43.47048301, 46.60107335, 44.72271914, 41.94991055, 47.13774597, 49.28443649, 48.8372093
, 43.38103757, 37.20930233, 36.76207513, 38.46153846, 41.5921288, 37.47763864, 33.72093023, 35.33094812, 38.5509839, 39.80322004
, 36.85152057, 37.29874776, 38.81932021, 37.65652952, 38.5509839, 40.96601073, 34.97316637, 34.16815742, 37.83542039, 40.33989267
, 47.76386404, 29.42754919, 29.33810376, 2*29.42754919, 29.24865832, 2*29.15921288, 29.60644007, 29.78533095, 29.69588551, 30.50089445
, 31.12701252, 30.23255814, 31.03756708, 30.41144902, 3.13059034, 1.967799642, 6.797853309, 0.894454383, 4.830053667, 8.228980322
, 4.293381038, 2.59391771, 2.862254025, 10.46511628, 8.050089445, 2.772808587, 2.236135957, 1.699463327, 4.472271914, 6.797853309
, 5.277280859, 5.098389982, 8.31842576, 9.838998211, 13.59570662, 12.79069767, 14.490161, 13.59570662, 11.18067979, 5.813953488
, 9.481216458, 2*13.41681574, 10.82289803, 9.033989267, 12.6118068, 17.26296959, 10.82289803, 8.765652952, 13.59570662, 8.676207513
, 5.545617174, 9.39177102, 6.887298748, 16.36851521, 17.88908766, 18.60465116, 18.51520572, 17.88908766, 19.23076923, 20.30411449
, 17.79964222, 15.02683363, 15.38461538, 15.56350626, 14.04293381, 15.11627907, 16.27906977);
    UNIVERSE.MAP.POINT.Y = 110(43.11270125, 43.20214669, 40.4293381, 37.92486583, 34.3470483, 33.1842576, 28.35420394, 25.67084079, 28.44364937, 20.12522361
, 18.87298748, 15.92128801, 14.75849732, 11.35957066, 10.64400716, 5.992844365, 7.781753131, 3.398926655, 5.903398927, 0.805008945
, 46.24329159, 42.39713775, 37.83542039, 34.88372093, 37.11985689, 31.48479428, 37.11985689, 28.35420394, 25.58139535, 20.84078712
, 15.56350626, 12.88014311, 10.01788909, 5.18783542, 2.057245081, 2.59391771, 42.03935599, 45.43828265, 47.22719141, 47.76386404
, 45.7960644, 48.21109123, 45.70661896, 41.14490161, 39.35599284, 35.68872987, 33.09481216, 28.80143113, 25.76028623, 23.70304114
, 19.67799642, 17.71019678, 12.25402504, 8.944543828, 6.171735242, 1.610017889, 47.13774597, 42.39713775, 35.509839, 30.85867621
, 24.23971377, 25.2236136, 18.78354204, 21.10912343, 15.47406082, 14.57960644, 12.6118068, 11.89624329, 9.302325581, 5.635062612
, 2.951699463, 2.146690519, 5.992844365, 8.676207513, 9.033989267, 6.529516995, 3.220035778, 7.423971377, 11.53846154, 16.36851521
, 17.26296959, 17.08407871, 21.10912343, 20.39355993, 27.19141324, 27.63864043, 2*31.93202147, 28.35420394, 37.11985689, 39.7137746
, 39.98211091, 43.38103757, 45.97495528, 46.77996422, 48.56887299, 1.699463327, 4.203935599, 9.212880143, 13.50626118, 18.78354204
, 23.07692308, 28.08586762, 31.39534884, 34.70483005, 37.29874776, 41.50268336, 44.54382826, 46.60107335, 47.94275492);
    UNIVERSE.MAP.POINT.LAYER = 110(110*0);
    UNIVERSE.MAP.POINT.DIRECTION = 110(110*0.0);
    UNIVERSE.MAP.POINT.DIJKSTRAVALUE = 110(110*0.0);
    UNIVERSE.MAP.POINT.SITE = 110(20*1, 23*0, 4*4, 3*0, 2*4, 2*0, 2*4, 5*2, 2*0, 3*3
, 0, 2*3, 41*0);
    UNIVERSE.MAP.POINT.COLOR = 110(110*0);
}


//-------------------------------------------------------
// Agent Rule
//-------------------------------------------------------
#begin_rule UNIVERSE
include"dijkstra.inc"

Univ_Init{
initialize_dijkstra()
}

Univ_Step_Begin{
}

Univ_Step_End{

}

Univ_Finish{

}

sub create_block(countStep as Long, beginPointID as integer, endPointID as integer, newCost as Double)
{
dim streetagt as agt
dim beginpointagt as agt
dim endpointagt as agt
dim blockagt as agt

if getcountstep() == countstep then
	update_cost(beginpointid, endpointid,newcost)
	beginpointagt = universe.Map.Point(beginpointid)
	endpointagt = universe.Map.Point(endpointid)
	blockagt = createagt(universe.Map.block)
	blockagt.x = (beginpointagt.x + endpointagt.x) / 2
	blockagt.y = (beginpointagt.y + endpointagt.y) / 2
end if
	
}
#end_rule UNIVERSE




//-------------------------------------------------------
// Agent Rule
//-------------------------------------------------------
#begin_rule UNIVERSE.MAP.POINT
Agt_Init{
dim personAgt as agt

If My.ID <= 20  Then
	personAgt = createagt(universe.Map.Person)
	personAgt.x = my.X
	personAgt.y = my.Y
	personAgt.RouteArray = @dijkstra(my.ID, "63")
	personAgt.RouteCount = 1
end if

// siteが1なら家、2ならオフィス、3なら店、4なら橋の計測部分
if my.site == 0 then
	my.color = COLOR_RED
elseif my.site == 1 then
	my.color = COLOR_BLUE
elseif my.site == 2 then
	my.color = COLOR_GREEN
elseif my.site == 3 then
	my.color = COLOR_CYAN
elseif my.site == 4 then
	my.color = COLOR_MAGENTA
end if
}

Agt_Step{
}
#end_rule UNIVERSE.MAP.POINT




//-------------------------------------------------------
// Agent Rule
//-------------------------------------------------------
#begin_rule UNIVERSE.MAP.PERSON
Agt_Init{
my.Color = COLOR_BLUE
my.action = 1
}

Agt_Step{
	Dim targetPointAgt As Agt
	Dim distance As Double
	Dim lastTargetPointAgt As Agt
	Dim streetAgt As Agt
	
	lastTargetPointAgt = Universe.Map.Point(CInt(GetToken(My.RouteArray, My.RouteCount-1)))
	targetPointAgt = Universe.Map.Point(CInt(GetToken(My.RouteArray, My.RouteCount)))
	streetAgt = @get_street_from_points(lastTargetPointAgt.ID, targetPointAgt.ID)
	If streetAgt.Cost == 10000 Then
		// 立ち止まる
		My.Color = COLOR_GREEN
	ElseIf My.RouteCount < CountToken(My.RouteArray) Then
		// 経路に沿って進む
		targetPointAgt = Universe.Map.Point(CInt(GetToken(My.RouteArray, My.RouteCount)))
		distance = Pursue(targetPointAgt, 1)
		
		If distance > 0 Then
			// 次のPointに到着したとき
			lastTargetPointAgt = Universe.Map.Point(CInt(GetToken(My.RouteArray, My.RouteCount)))
			My.RouteCount = My.RouteCount + 1
			If CountToken(My.RouteArray) > My.RouteCount Then
				targetPointAgt = Universe.Map.Point(CInt(GetToken(My.RouteArray, My.RouteCount)))
				streetAgt = @get_street_from_points(lastTargetPointAgt.ID, targetPointAgt.ID)
				If streetAgt.Cost == 10000 Then
					// StreetのCostが10000の場合は経路を再探索する
					reroute(targetPointAgt)
				Else
					// 余剰分、次のPointへ向かう
					Pursue(targetPointAgt, distance)
				End If
			Else
				// 経済活動を終えたならば家に帰る
				if my.action == 1 then
					my.action = 0
					homeroute(targetpointagt)
				// 経済活動をしていないなら対岸に向かう
				elseif my.action == 0 then
					my.action = 1
					if rnd() < 0.5 then
						shoproute(targetpointagt)
					else
						jobroute(targetpointagt)
					end if
				end if
			End If
		End If
	End If
}

// 経路を再探索する
Sub reroute(targetPointAgt As Agt)
{
	Dim startPointAgt As Agt
	Dim goalPointID As Integer
	Dim newRoute As String
	Dim lastRouteArray As String
	Dim i As Integer
	
	// 現在地点から経路を再探索する
	startPointAgt = Universe.Map.Point(CInt(GetToken(My.RouteArray, My.RouteCount - 1)))
	goalPointID = CInt(gettoken(my.RouteArray,counttoken(my.RouteArray)-1))
	newRoute = @dijkstra(startPointAgt.ID, CStr(goalPointID))
		
	lastRouteArray = My.RouteArray
	My.RouteArray = ""
	
	// これまでに通った経路を格納する
	For i=0 To My.RouteCount - 2
		My.RouteArray = My.RouteArray & GetToken(lastRouteArray, i) & ","
	Next i
	
	// 新しい経路を追加する
	My.RouteArray = My.RouteArray & newRoute
	
	// エージェントの色を変更する
	My.Color = COLOR_YELLOW
}

Sub homeroute(targetPointAgt As Agt)
{
	Dim startPointAgt As Agt
	Dim goalPointID As Integer
	Dim newRoute As String
	Dim lastRouteArray As String
	Dim i As Integer
	
	// 現在地点から経路を再探索する
	startPointAgt = Universe.Map.Point(CInt(GetToken(My.RouteArray, My.RouteCount - 1)))
	goalPointID = my.ID
	newRoute = @dijkstra(startPointAgt.ID, CStr(goalPointID))
		
	lastRouteArray = My.RouteArray
	My.RouteArray = ""
	
	// これまでに通った経路を格納する
	For i=0 To My.RouteCount - 2
		My.RouteArray = My.RouteArray & GetToken(lastRouteArray, i) & ","
	Next i
	
	// 新しい経路を追加する
	My.RouteArray = My.RouteArray & newRoute
	
	// エージェントの色を変更する
	My.Color = COLOR_YELLOW
}

Sub shoproute(targetPointAgt As Agt)
{
	Dim startPointID As Integer
	Dim goalPointID As Integer
	Dim newRoute As String
	Dim lastRouteArray As String
	Dim i As Integer
	
	// 現在地点から経路を再探索する
	// どのshopに向かうかをランダムに決める
	startPointid = my.ID
	if rnd() < 0.2 then
		goalPointID = universe.shoplist(0)
	elseif rnd() < 0.4 then
		goalPointID = universe.shoplist(1)
	elseif rnd() < 0.6 then
		goalPointID = universe.shoplist(2)
	elseif rnd() < 0.8 then
		goalPointID = universe.shoplist(3)
	else
		goalPointID = universe.shoplist(4)
	end if
	newRoute = @dijkstra(startPointID, CStr(goalPointID))
		
	lastRouteArray = My.RouteArray
	My.RouteArray = ""
	
	// これまでに通った経路を格納する
	For i=0 To My.RouteCount - 2
		My.RouteArray = My.RouteArray & GetToken(lastRouteArray, i) & ","
	Next i
	
	// 新しい経路を追加する
	My.RouteArray = My.RouteArray & newRoute
	
	// エージェントの色を変更する
	My.Color = COLOR_CYAN
}

Sub jobroute(targetPointAgt As Agt)
{
	Dim startPointID As Integer
	Dim goalPointID As Integer
	Dim newRoute As String
	Dim lastRouteArray As String
	Dim i As Integer
	
	// 現在地点から経路を再探索する
	// どのofiiceに向かうかをランダムに決める
	startPointid = my.ID
	if rnd() < 0.2 then
		goalPointID = universe.officelist(0)
	elseif rnd() < 0.4 then
		goalPointID = universe.officelist(1)
	elseif rnd() < 0.6 then
		goalPointID = universe.officelist(2)
	elseif rnd() < 0.8 then
		goalPointID = universe.officelist(3)
	else
		goalPointID = universe.officelist(4)
	end if
	newRoute = @dijkstra(startPointID, CStr(goalPointID))
		
	lastRouteArray = My.RouteArray
	My.RouteArray = ""
	
	// これまでに通った経路を格納する
	For i=0 To My.RouteCount - 2
		My.RouteArray = My.RouteArray & GetToken(lastRouteArray, i) & ","
	Next i
	
	// 新しい経路を追加する
	My.RouteArray = My.RouteArray & newRoute
	
	// エージェントの色を変更する
	My.Color = COLOR_GREEN
}
#end_rule UNIVERSE.MAP.PERSON




//-------------------------------------------------------
// Agent Rule
//-------------------------------------------------------
#begin_rule UNIVERSE.MAP.BLOCK
Agt_Init{

}

Agt_Step{

}
#end_rule UNIVERSE.MAP.BLOCK




//-------------------------------------------------------
// Agent Rule
//-------------------------------------------------------
#begin_rule UNIVERSE.MAP.GOVERNMENT
Agt_Init{
my.X = 25
my.Y = 25
dim list as agtset
dim one as agt
dim one1 as agt
dim i as integer
dim shops as agtset
dim offices as agtset
dim shoplist(5) as integer
dim officelist(5) as integer
// 店及びオフィスのIDを取得したい
makeoneagtsetaroundown(list,1000,universe.Map.Point,false)
for each one in list
	if one.site == 2 then
		addagt(offices,one)
	elseif one.site == 3 then
		addagt(shops,one)
	end if
next one
for i = 0 to 4 
	one = getagt(offices,i)
	one1 = getagt(shops,i)
	officelist(i) = one.id
	shoplist(i) = one1.id
next i
universe.officelist(0) = officelist(0) 
universe.officelist(1) = officelist(1) 
universe.officelist(2) = officelist(2) 
universe.officelist(3) = officelist(3) 
universe.officelist(4) = officelist(4) 
universe.shoplist(0) = shoplist(0) 
universe.shoplist(1) = shoplist(1) 
universe.shoplist(2) = shoplist(2) 
universe.shoplist(3) = shoplist(3) 
universe.shoplist(4) = shoplist(4) 
print(universe.shoplist(0) & universe.shoplist(1) & universe.shoplist(2) & universe.shoplist(3) & universe.shoplist(4))
}

Agt_Step{

}
#end_rule UNIVERSE.MAP.GOVERNMENT




//-------------------------------------------------------
// Agent Rule
//-------------------------------------------------------
#begin_rule UNIVERSE.LINK
Agt_Init{

}

Agt_Step{

}
#end_rule UNIVERSE.LINK




//-------------------------------------------------------
// Agent Rule
//-------------------------------------------------------
#begin_rule UNIVERSE.STREET
Agt_Init{

}

Agt_Step{

}
#end_rule UNIVERSE.STREET




//-------------------------------------------------------
// Agent Rule
//-------------------------------------------------------
#begin_rule UNIVERSE.DIJKSTRASTREET
Agt_Init{

}

Agt_Step{

}
#end_rule UNIVERSE.DIJKSTRASTREET




//-------------------------------------------------------
// Agent Rule
//-------------------------------------------------------
#begin_rule UNIVERSE.STREETBACKUP
Agt_Init{

}

Agt_Step{

}
#end_rule UNIVERSE.STREETBACKUP




//-------------------------------------------------------
// Agent Rule
//-------------------------------------------------------
#begin_rule UNIVERSE.POINTBACKUP
Agt_Init{

}

Agt_Step{

}
#end_rule UNIVERSE.POINTBACKUP




//-------------------------------------------------------
// Simulation Definition Division
//-------------------------------------------------------
Single_Simulation {
    Step_Max = 0;
    Time_Max = 0;
    End_Condition = "";
    Exec_Wait = 100;
    Exec_Order = Random;
    Exec_Order_Random_First_Step_Only = No;
    Random_Seed = 0;
    Redraw_Timing = Step;
    Redraw_Interval = 1;
    Garbage_Interval = 0;
}


//-------------------------------------------------------
// Simulation Loop Definition Division
//-------------------------------------------------------
Repeat_Simulation {
    Value_Change = None;
    Initial_Value_Change_None {
        Repeat_Max = 1;
    }
}


//-------------------------------------------------------
// 2 Dimension Map Display Definition Division
//-------------------------------------------------------
Map_Output {
    Map_Space_Name = "Universe.Map";
    Map_Name = "Map";
    Title = "Map";
    Disable = No;
    Background_Color = 255, 255, 255;
    Position_x = 115;
    Position_y = 15;
    Size_x = 778;
    Size_y = 677;
    Remarks = Yes;
    Map_Cell_Size = 11;
    Legend_Pos = Top;
    Font_Name = "Dialog";
    Font_Char_Set = 81;
    Font_Size = 12.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 255, 255, 255;
    FastDraw = Yes;
    Draw_Timing = Simulation_Step;
    Draw_Interval = 1;
    Axis_Label = "", "";
    Draw_Range = 0, 0, 50, 50;
    Ruled_Line = No;
    Text_Display = No;
    Text_Display_Variable_Name = "";
    Chess_Type_Display_Position = Yes;
    Background_Transparent = No;
    Target_Layer = 0;
    Coordinate_Display = No;
    Space_Kind = Square_2D;
    BG_Pict = Yes;
    BG_Type = 0;
    BG_Var_Name = "";
    BG_File_Name = "map.jpg";
    Origin_Position = 2;
    Output_Group_Name = "";
    Output {
        Map_Element_Name = "Point";
        Map_Element = Agent_Variable;
        Output_Expression = "Universe.Map.Point";
        Draw_Line = Yes;
        Collection_Name = "Universe.Map.Point.NearAgtSet";
        Line_Type = 1;
        Line_Arrow = 1;
        Line_Width = 1;
        Line_Color = 0, 255, 51;
        Line_Type_Variable = "";
        Line_Arrow_Variable = "";
        Line_Width_Variable = "";
        Line_Color_Variable = "";
        Agent_Color = "Universe.Map.Point.color";
        Marker_Id = 1;
        Effective_Figures = 0;
        Format_Id = 0;
        Agent_Image_Direction = No;
        Icon_Type = 0;
        Icon_Var_Name = "";
        Icon_Transparent = No;
        Icon_Enlarg_Reduce = No;
        Icon_File_Name = "";
        Num_Display = Yes;
        Num_Var_Name = "Universe.Map.Point.ID";
        Agent_Image_Magnify_by_value = Yes;
        Agent_Image_Magnify_Value = 1.0;
        Agent_Image_Magnify_Variable_Name = "Universe.Map.Point.ID";
        Agent_Image_Transparency_by_value = Yes;
        Agent_Image_Transparency_Value = 0.0;
        Agent_Image_Transparency_Variable_Name = "Universe.Map.Point.ID";
    }
    Output {
        Map_Element_Name = "Person";
        Map_Element = Agent_Variable;
        Output_Expression = "Universe.Map.Person";
        Draw_Line = No;
        Collection_Name = "";
        Line_Type = 0;
        Line_Arrow = 0;
        Line_Width = 0;
        Line_Color = 0, 0, 0;
        Line_Type_Variable = "";
        Line_Arrow_Variable = "";
        Line_Width_Variable = "";
        Line_Color_Variable = "";
        Agent_Color = "Universe.Map.Person.Color";
        Marker_Id = 1;
        Effective_Figures = 0;
        Format_Id = 0;
        Agent_Image_Direction = No;
        Icon_Type = 0;
        Icon_Var_Name = "";
        Icon_Transparent = No;
        Icon_Enlarg_Reduce = No;
        Icon_File_Name = "";
        Num_Display = No;
        Num_Var_Name = "";
        Agent_Image_Magnify_by_value = Yes;
        Agent_Image_Magnify_Value = 1.0;
        Agent_Image_Magnify_Variable_Name = "Universe.Map.Person.ID";
        Agent_Image_Transparency_by_value = Yes;
        Agent_Image_Transparency_Value = 0.0;
        Agent_Image_Transparency_Variable_Name = "Universe.Map.Person.ID";
    }
    Output {
        Map_Element_Name = "Block";
        Map_Element = Agent_Variable;
        Output_Expression = "Universe.Map.Block";
        Draw_Line = No;
        Collection_Name = "";
        Line_Type = 0;
        Line_Arrow = 0;
        Line_Width = 0;
        Line_Color = 0, 0, 0;
        Line_Type_Variable = "";
        Line_Arrow_Variable = "";
        Line_Width_Variable = "";
        Line_Color_Variable = "";
        Agent_Color = 0,51,255;
        Marker_Id = 4;
        Effective_Figures = 0;
        Format_Id = 0;
        Agent_Image_Direction = No;
        Icon_Type = 0;
        Icon_Var_Name = "";
        Icon_Transparent = No;
        Icon_Enlarg_Reduce = No;
        Icon_File_Name = "";
        Num_Display = No;
        Num_Var_Name = "";
        Agent_Image_Magnify_by_value = Yes;
        Agent_Image_Magnify_Value = 1.0;
        Agent_Image_Magnify_Variable_Name = "Universe.Map.Block.ID";
        Agent_Image_Transparency_by_value = Yes;
        Agent_Image_Transparency_Value = 0.0;
        Agent_Image_Transparency_Variable_Name = "Universe.Map.Block.ID";
    }
    Output {
        Map_Element_Name = "government";
        Map_Element = Agent_Variable;
        Output_Expression = "Universe.Map.government";
        Draw_Line = No;
        Collection_Name = "";
        Line_Type = 0;
        Line_Arrow = 0;
        Line_Width = 0;
        Line_Color = 0, 0, 0;
        Line_Type_Variable = "";
        Line_Arrow_Variable = "";
        Line_Width_Variable = "";
        Line_Color_Variable = "";
        Agent_Color = 0,0,0;
        Marker_Id = 1;
        Effective_Figures = 0;
        Format_Id = 0;
        Agent_Image_Direction = No;
        Icon_Type = 0;
        Icon_Var_Name = "";
        Icon_Transparent = No;
        Icon_Enlarg_Reduce = No;
        Icon_File_Name = "";
        Num_Display = No;
        Num_Var_Name = "";
        Agent_Image_Magnify_by_value = Yes;
        Agent_Image_Magnify_Value = 1.1;
        Agent_Image_Magnify_Variable_Name = "Universe.Map.government.ID";
        Agent_Image_Transparency_by_value = Yes;
        Agent_Image_Transparency_Value = 0.0;
        Agent_Image_Transparency_Variable_Name = "Universe.Map.government.ID";
    }
}


//-------------------------------------------------------
// Control Panel Definition Division
//-------------------------------------------------------
Control_Panel {
    Display_Area = 0, 0, 100, 100;
}


//-------------------------------------------------------
// Space Initial Value Definition Divsion
//-------------------------------------------------------
Space_Initial {
}


//-------------------------------------------------------
// Other Miscellaneous Data Definition Division
//-------------------------------------------------------
Others_Data {
    Indent = 4;
    Rule_Colored = Yes;
    Window_Hide_Run = 1;
    Debug_Position_x = 75;
    Debug_Position_y = 75;
    Debug_Size_x = 400;
    Debug_Size_y = 200;
    Console_Position_x = 40;
    Console_Position_y = 692;
    Console_Size_x = 600;
    Console_Size_y = 120;
    Componen_Tree_Position_x = 2;
    Componen_Tree_Position_y = 2;
    Componen_Tree_Size_x = 165;
    Componen_Tree_Size_y = 400;
    Console_Background_Color = 16777215;
    Console_Foreground_Color = 255;
    Console_DisplayLines_Max = 500;
    Font_Name = "Dialog";
    Font_Char_Set = 0;
    Font_Size = 18.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 0, 0, 0;
}


//-------------------------------------------------------
// Network Information Definition Division
//-------------------------------------------------------
Network_Info {
    Global_Space_Area = 0, 0, 100, 100;
    Local_Space_Info {
    }
}


//-------------------------------------------------------
// Space Map Initial Value Definition Division
//-------------------------------------------------------
Space_Map_Initial_Value {
    Space_Path_Name = Universe.Map;
    Background_Image_File_Path_Name = "../../Downloads/ph3.jpg";
    Origin_Position = Left_Bottom;
    Position_Agent {
        Agent_Name = Universe.Map.Point;
        Marker_Color = 255, 0, 0;
        Marker_Id = 1;
        Value = (44.991055456171736,43.112701252236135,0),(42.486583184257604,43.20214669051879,0),(43.20214669051879,40.429338103756706,0),(46.86940966010734,37.924865831842574,0),(45.16994633273703,34.34704830053667,0)
               ,(40.96601073345259,33.18425760286225,0),(43.82826475849731,28.354203935599283,0),(45.52772808586762,25.670840787119857,0),(48.21109123434705,28.443649373881932,0),(47.49552772808587,20.125223613595708,0)
               ,(42.039355992844364,18.872987477638638,0),(46.69051878354204,15.921288014311273,0),(41.77101967799642,14.758497316636848,0),(43.47048300536673,11.359570661896242,0),(46.601073345259394,10.644007155635066,0)
               ,(44.72271914132379,5.992844364937383,0),(41.94991055456172,7.781753130590339,0),(47.13774597495528,3.398926654740606,0),(49.28443649373882,5.903398926654745,0),(48.83720930232558,0.8050089445438289,0)
               ,(43.38103756708408,46.2432915921288,0),(37.2093023255814,42.39713774597496,0),(36.76207513416816,37.83542039355993,0),(38.46153846153846,34.883720930232556,0),(41.59212880143113,37.11985688729875,0)
               ,(37.47763864042934,31.48479427549195,0),(33.72093023255814,37.11985688729875,0),(35.3309481216458,28.354203935599283,0),(38.550983899821105,25.58139534883721,0),(39.803220035778175,20.840787119856888,0)
               ,(36.85152057245081,15.563506261180677,0),(37.29874776386404,12.880143112701248,0),(38.81932021466905,10.017889087656528,0),(37.65652951699463,5.187835420393554,0),(38.550983899821105,2.0572450805008913,0)
               ,(40.96601073345259,2.593917710196777,0),(34.97316636851521,42.039355992844364,0),(34.16815742397138,45.43828264758497,0),(37.83542039355993,47.227191413237925,0),(40.33989266547406,47.76386404293381,0)
               ,(47.76386404293381,45.796064400715565,0),(29.427549194991055,48.21109123434705,0),(29.338103756708406,45.70661896243291,0),(29.427549194991055,41.14490161001789,0),(29.427549194991055,39.355992844364934,0)
               ,(29.24865831842576,35.688729874776385,0),(29.159212880143112,33.09481216457961,0),(29.159212880143112,28.80143112701252,0),(29.60644007155635,25.760286225402503,0),(29.785330948121647,23.70304114490161,0)
               ,(29.695885509838998,19.677996422182467,0),(30.500894454382827,17.71019677996422,0),(31.127012522361362,12.254025044722717,0),(30.232558139534884,8.944543828264756,0),(31.037567084078713,6.171735241502688,0)
               ,(30.41144901610018,1.6100178890876577,0),(3.1305903398926667,47.13774597495528,0),(1.967799642218246,42.39713774597496,0),(6.797853309481216,35.509838998211094,0),(0.8944543828264742,30.85867620751342,0)
               ,(4.83005366726297,24.239713774597497,0),(8.228980322003576,25.22361359570662,0),(4.293381037567084,18.783542039355993,0),(2.5939177101967807,21.10912343470483,0),(2.8622540250447237,15.474060822898032,0)
               ,(10.465116279069766,14.579606440071558,0),(8.050089445438282,12.611806797853305,0),(2.772808586762075,11.896243291592128,0),(2.236135957066189,9.302325581395351,0),(1.699463327370303,5.635062611806802,0)
               ,(4.472271914132378,2.9516994633273725,0),(6.797853309481216,2.1466905187835437,0),(5.277280858676207,5.992844364937383,0),(5.098389982110913,8.676207513416813,0),(8.318425760286225,9.033989266547408,0)
               ,(9.838998211091234,6.529516994633269,0),(13.595706618962433,3.2200357781753155,0),(12.790697674418604,7.42397137745975,0),(14.490161001788909,11.53846153846154,0),(13.595706618962433,16.368515205724506,0)
               ,(11.180679785330948,17.262969588550988,0),(5.813953488372093,17.08407871198569,0),(9.481216457960643,21.10912343470483,0),(13.416815742397137,20.39355992844365,0),(13.416815742397137,27.191413237924866,0)
               ,(10.822898032200358,27.638640429338103,0),(9.033989266547406,31.932021466905187,0),(12.611806797853308,31.932021466905187,0),(17.262969588550984,28.354203935599283,0),(10.822898032200358,37.11985688729875,0)
               ,(8.765652951699462,39.71377459749553,0),(13.595706618962433,39.98211091234347,0),(8.676207513416816,43.38103756708408,0),(5.54561717352415,45.974955277280856,0),(9.391771019677996,46.779964221824685,0)
               ,(6.8872987477638645,48.56887298747764,0),(16.368515205724506,1.699463327370303,0),(17.88908765652952,4.203935599284435,0),(18.6046511627907,9.212880143112699,0),(18.51520572450805,13.506261180679786,0)
               ,(17.88908765652952,18.783542039355993,0),(19.23076923076923,23.076923076923077,0),(20.304114490161002,28.08586762075134,0),(17.79964221824687,31.3953488372093,0),(15.026833631484793,34.704830053667266,0)
               ,(15.384615384615385,37.29874776386404,0),(15.56350626118068,41.50268336314848,0),(14.04293381037567,44.5438282647585,0),(15.116279069767442,46.601073345259394,0),(16.27906976744186,47.94275491949911,0);
    }
    Link_Agent {
        Agent_Name = Universe.Link;
        Line_Color = 0, 255, 0;
        Line_Type = 1;
        Arrow_Type = 1;
        Link_Id = "Universe.Map.Point/Universe.Map.Point";
        Link = (0,0,1),(0,1,2),(0,2,3),(0,3,4),(0,4,5)
              ,(0,5,6),(0,6,7),(0,7,8),(0,8,9),(0,9,10)
              ,(0,10,11),(0,11,12),(0,12,13),(0,13,14),(0,14,15)
              ,(0,15,16),(0,16,17),(0,17,18),(0,18,19),(0,20,21)
              ,(0,21,22),(0,22,23),(0,23,24),(0,24,25),(0,25,26)
              ,(0,26,27),(0,27,28),(0,28,29),(0,29,30),(0,30,31)
              ,(0,31,32),(0,32,33),(0,33,34),(0,34,35),(0,35,19)
              ,(0,19,16),(0,16,15),(0,15,35),(0,35,34),(0,34,33)
              ,(0,33,16),(0,16,13),(0,13,32),(0,32,12),(0,12,31)
              ,(0,31,10),(0,10,30),(0,30,7),(0,7,29),(0,29,28)
              ,(0,28,6),(0,6,27),(0,27,25),(0,25,5),(0,26,23)
              ,(0,23,26),(0,26,22),(0,22,26),(0,26,21),(0,21,36)
              ,(0,36,37),(0,37,38),(0,38,39),(0,39,20),(0,20,38)
              ,(0,38,20),(0,20,1),(0,1,20),(0,20,0),(0,0,20)
              ,(0,20,40),(0,40,3),(0,3,2),(0,2,24),(0,24,2)
              ,(0,2,22),(0,22,24),(0,24,3),(0,3,4),(0,4,6)
              ,(0,6,4),(0,4,8),(0,8,4),(0,4,7),(0,7,9)
              ,(0,9,11),(0,11,14),(0,14,18),(0,18,14),(0,14,13)
              ,(0,13,11),(0,11,9),(0,9,18),(0,18,8),(0,3,8)
              ,(0,41,42),(0,42,43),(0,43,44),(0,44,45),(0,45,46)
              ,(0,46,47),(0,47,48),(0,48,49),(0,49,50),(0,50,51)
              ,(0,51,52),(0,52,53),(0,53,54),(0,54,55),(0,34,55)
              ,(0,55,33),(0,33,54),(0,54,32),(0,32,53),(0,53,31)
              ,(0,31,52),(0,52,30),(0,30,51),(0,51,29),(0,29,50)
              ,(0,50,28),(0,28,49),(0,49,27),(0,27,46),(0,46,47)
              ,(0,47,26),(0,26,48),(0,48,25),(0,25,46),(0,46,45)
              ,(0,45,23),(0,23,26),(0,26,22),(0,22,41),(0,41,38)
              ,(0,38,41),(0,41,37),(0,37,43),(0,43,44),(0,44,36)
              ,(0,36,45),(0,45,5),(0,56,57),(0,57,58),(0,58,59)
              ,(0,59,60),(0,60,61),(0,61,62),(0,62,63),(0,63,64)
              ,(0,64,65),(0,65,66),(0,66,67),(0,67,68),(0,68,69)
              ,(0,69,70),(0,70,71),(0,71,72),(0,72,73),(0,73,74)
              ,(0,74,75),(0,75,76),(0,76,77),(0,77,78),(0,78,79)
              ,(0,79,80),(0,80,81),(0,81,82),(0,82,83),(0,83,84)
              ,(0,84,85),(0,85,86),(0,86,87),(0,87,88),(0,88,89)
              ,(0,89,90),(0,90,91),(0,91,92),(0,92,93),(0,93,94)
              ,(0,94,95),(0,95,56),(0,56,93),(0,93,58),(0,58,90)
              ,(0,90,57),(0,57,59),(0,59,63),(0,63,61),(0,61,60)
              ,(0,60,62),(0,62,81),(0,81,62),(0,62,82),(0,82,80)
              ,(0,80,83),(0,83,79),(0,79,65),(0,65,67),(0,67,64)
              ,(0,64,66),(0,66,68),(0,68,73),(0,73,66),(0,66,74)
              ,(0,74,72),(0,72,75),(0,75,71),(0,71,77),(0,77,76)
              ,(0,76,69),(0,69,73),(0,73,74),(0,74,78),(0,78,66)
              ,(0,66,65),(0,65,81),(0,81,64),(0,64,62),(0,62,61)
              ,(0,61,84),(0,84,61),(0,61,85),(0,85,59),(0,59,86)
              ,(0,86,58),(0,58,89),(0,89,91),(0,91,86),(0,86,84)
              ,(0,84,88),(0,88,96),(0,96,97),(0,97,98),(0,98,99)
              ,(0,99,100),(0,100,101),(0,101,102),(0,102,103),(0,103,104)
              ,(0,104,105),(0,105,106),(0,106,107),(0,107,108),(0,108,109)
              ,(0,109,43),(0,43,44),(0,44,103),(0,103,44),(0,44,46)
              ,(0,46,100),(0,100,99),(0,99,45),(0,45,99),(0,99,98)
              ,(0,98,55),(0,55,54),(0,54,96),(0,96,76),(0,76,96)
              ,(0,96,97),(0,97,51),(0,51,50),(0,50,105),(0,105,106)
              ,(0,106,45),(0,101,83),(0,83,101),(0,101,102),(0,102,88)
              ,(0,88,102),(0,104,87),(0,87,104),(0,104,105),(0,105,106)
              ,(0,106,107),(0,107,92),(0,92,107),(0,107,108),(0,108,94)
              ,(0,98,77),(0,77,98);
    }
}


//-------------------------------------------------------
// Window Location Definition Division
//-------------------------------------------------------
Window_Rectangle {
    Window_Name = Main_Window, 1, 55, 899, 917;
    Window_Name = Output_Setting_Window, 209, 313, 480, 290;
}


//-------------------------------------------------------
// Help Favorite Division
//-------------------------------------------------------
Help_Favorite {
}
